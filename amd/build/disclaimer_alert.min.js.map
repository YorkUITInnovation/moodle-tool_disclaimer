{"version":3,"file":"disclaimer_alert.min.js","sources":["../src/disclaimer_alert.js"],"sourcesContent":["import notification from 'core/notification';\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport ajax from 'core/ajax';\nimport config from 'core/config';\n\nexport const init = async (results) => {\n\n   var params = await fetchData(results.disclaimerid, results.userid);\n   params.objectid = results.objectid;\n\n    const modal = await ModalFactory.create({\n        title: params.subject,\n        body: Templates.render('tool_disclaimer/disclaimer_modal', params),\n        footer: Templates.render('tool_disclaimer/modal_buttons', params),\n    });\n    // Prevent the modal from being dismissed when clicking outside\n    modal.getRoot().modal({\n        backdrop: 'static',\n        keyboard: false\n    });\n    modal.show();\n\n    /**\n     * Hide the modal and remove the backdrop\n     */\n    function hideModal() {\n        modal.destroy();\n        // Remove the backdrop manually using plain JavaScript\n        var backdrops = document.getElementsByClassName('modal-backdrop');\n        while (backdrops[0]) {\n            backdrops[0].parentNode.removeChild(backdrops[0]);\n        }\n    }\n\n    // Wait 2 seconds to activate teh buttons\n    await new Promise(resolve => setTimeout(resolve, 2000));\n\n    // If the user clicks the button with attribute data-action=\"hide\", the modal will be hidden\n    await document.querySelector('[data-action=\"hide\"]').addEventListener('click', () => {\n        respond(params.id, params.userid, 0, params.objectid, params.redirectto);\n        hideModal();\n    });\n\n    // When button with class btn-tool-disclaimer-cancel is clicked, the modal will be hidden\n    await document.getElementById('btn-tool-disclaimer-cancel').addEventListener('click', () => {\n        respond(params.id, params.userid, 0, params.objectid, params.redirectto);\n        hideModal();\n    });\n\n    // When Button with id btn-tool-disclaimer-yes is clicked, the modal will be hidden\n    await document.getElementById('btn-tool-disclaimer-yes').addEventListener('click', () => {\n        respond(params.id, params.userid, 1, params.objectid, '');\n        hideModal();\n    });\n\n    // When Button with id btn-tool-disclaimer-no is clicked, the modal will be hidden\n    await document.getElementById('btn-tool-disclaimer-no').addEventListener('click', () => {\n        respond(params.id, params.userid, 2, params.objectid, params.redirectto);\n        hideModal();\n    });\n\n    // Set paramaters for template\n\n\n};\n\n/**\n * Make ajax call to save the response of the user\n * @param {number} disclaimerid\n * @param {number} userid\n * @param {number} response\n * @param {number} objectid\n * @param {string} redirectto\n */\nfunction respond(disclaimerid, userid, response, objectid, redirectto = '') {\n    if (objectid === undefined) {\n        objectid = 0;\n    }\n\n    const args = {\n        userid: userid,\n        disclaimerid: disclaimerid,\n        response: response,\n        objectid: objectid\n    };\n\n    var saveResponse = ajax.call([{\n        methodname: 'tool_disclaimer_response',\n        args: args\n    }]);\n    saveResponse[0].done(function () {\n        if (redirectto) {\n            window.location.href = config.wwwroot + redirectto;\n        }\n    }).fail(function () {\n        notification.alert('Could not save response');\n    });\n}\n\n/**\n *\n * @param {int} disclaimerid\n * @param {int} userid\n * @returns {Promise<unknown>}\n */\nfunction fetchData (disclaimerid, userid) {\n    return new Promise((resolve, reject) => {\n        var getDisclaimer = ajax.call([{\n            methodname: 'tool_disclaimer_get_disclaimer',\n            args: {\n                id: disclaimerid\n            }\n        }]);\n        getDisclaimer[0].done(function (data) {\n            data.userid = userid;\n            resolve(data);\n        }).fail(function () {\n            notification.alert('Could not get disclaimer');\n            reject();\n        });\n    });\n}"],"names":["respond","disclaimerid","userid","response","objectid","redirectto","undefined","args","saveResponse","ajax","call","methodname","done","window","location","href","config","wwwroot","fail","alert","async","params","results","Promise","resolve","reject","id","data","modal","ModalFactory","create","title","subject","body","Templates","render","footer","hideModal","destroy","backdrops","document","getElementsByClassName","parentNode","removeChild","getRoot","backdrop","keyboard","show","setTimeout","querySelector","addEventListener","getElementById"],"mappings":"gmBA2ESA,QAAQC,aAAcC,OAAQC,SAAUC,cAAUC,kEAAa,QACnDC,IAAbF,WACAA,SAAW,SAGTG,KAAO,CACTL,OAAQA,OACRD,aAAcA,aACdE,SAAUA,SACVC,SAAUA,cAGVI,aAAeC,cAAKC,KAAK,CAAC,CAC1BC,WAAY,2BACZJ,KAAMA,QAEVC,aAAa,GAAGI,MAAK,WACbP,aACAQ,OAAOC,SAASC,KAAOC,gBAAOC,QAAUZ,eAE7Ca,MAAK,iCACSC,MAAM,4CA1FPC,MAAAA,cAoGAnB,aAAcC,OAlG3BmB,aAkGapB,aAlGYqB,QAAQrB,aAkGNC,OAlGoBoB,QAAQpB,OAmGnD,IAAIqB,SAAQ,CAACC,QAASC,UACLhB,cAAKC,KAAK,CAAC,CAC3BC,WAAY,iCACZJ,KAAM,CACFmB,GAAIzB,iBAGE,GAAGW,MAAK,SAAUe,MAC5BA,KAAKzB,OAASA,OACdsB,QAAQG,SACTT,MAAK,iCACSC,MAAM,4BACnBM,gBA9GTJ,OAAOjB,SAAWkB,QAAQlB,eAEnBwB,YAAcC,uBAAaC,OAAO,CACpCC,MAAOV,OAAOW,QACdC,KAAMC,mBAAUC,OAAO,mCAAoCd,QAC3De,OAAQF,mBAAUC,OAAO,gCAAiCd,mBAYrDgB,YACLT,MAAMU,kBAEFC,UAAYC,SAASC,uBAAuB,kBACzCF,UAAU,IACbA,UAAU,GAAGG,WAAWC,YAAYJ,UAAU,IAdtDX,MAAMgB,UAAUhB,MAAM,CAClBiB,SAAU,SACVC,UAAU,IAEdlB,MAAMmB,aAeA,IAAIxB,SAAQC,SAAWwB,WAAWxB,QAAS,aAG3CgB,SAASS,cAAc,wBAAwBC,iBAAiB,SAAS,KAC3ElD,QAAQqB,OAAOK,GAAIL,OAAOnB,OAAQ,EAAGmB,OAAOjB,SAAUiB,OAAOhB,YAC7DgC,qBAIEG,SAASW,eAAe,8BAA8BD,iBAAiB,SAAS,KAClFlD,QAAQqB,OAAOK,GAAIL,OAAOnB,OAAQ,EAAGmB,OAAOjB,SAAUiB,OAAOhB,YAC7DgC,qBAIEG,SAASW,eAAe,2BAA2BD,iBAAiB,SAAS,KAC/ElD,QAAQqB,OAAOK,GAAIL,OAAOnB,OAAQ,EAAGmB,OAAOjB,SAAU,IACtDiC,qBAIEG,SAASW,eAAe,0BAA0BD,iBAAiB,SAAS,KAC9ElD,QAAQqB,OAAOK,GAAIL,OAAOnB,OAAQ,EAAGmB,OAAOjB,SAAUiB,OAAOhB,YAC7DgC"}